START TRANSACTION;
DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'default_schema') THEN
        CREATE SCHEMA default_schema;
    END IF;
END $EF$;

CREATE TABLE default_schema.cultures (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    name character varying(255) NOT NULL,
    CONSTRAINT "PK_cultures" PRIMARY KEY (id)
);

CREATE TABLE default_schema.events (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    name text NOT NULL,
    description text,
    picture text,
    CONSTRAINT "PK_events" PRIMARY KEY (id)
);

CREATE TABLE default_schema.map (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    name text NOT NULL,
    "mapLocation" text NOT NULL,
    CONSTRAINT "PK_map" PRIMARY KEY (id)
);

CREATE TABLE default_schema.nations (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    name text NOT NULL,
    fk_religions integer NOT NULL,
    fk_cultures integer NOT NULL,
    CONSTRAINT "PK_nations" PRIMARY KEY (id)
);

CREATE TABLE default_schema.players (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    "fk_User" integer NOT NULL,
    CONSTRAINT "PK_players" PRIMARY KEY (id)
);

CREATE TABLE default_schema."productionShares" (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    "fk_SocialGroups" integer NOT NULL,
    "fk_Resources" integer NOT NULL,
    coefficient float NOT NULL,
    CONSTRAINT "PK_productionShares" PRIMARY KEY (id)
);

CREATE TABLE default_schema.religions (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    name character varying(25) NOT NULL,
    CONSTRAINT "PK_religions" PRIMARY KEY (id)
);

CREATE TABLE default_schema.resources (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    name character varying(255) NOT NULL,
    ismain boolean NOT NULL,
    CONSTRAINT "PK_resources" PRIMARY KEY (id)
);

CREATE TABLE default_schema.socialgroups (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    name character varying(100) NOT NULL,
    basehappiness real NOT NULL,
    volunteers integer NOT NULL,
    CONSTRAINT "PK_socialgroups" PRIMARY KEY (id)
);

CREATE TABLE default_schema."unitTypes" (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    name text NOT NULL,
    description text NOT NULL,
    melee integer NOT NULL,
    range integer NOT NULL,
    defense integer NOT NULL,
    speed integer NOT NULL,
    morale integer NOT NULL,
    "volunteersNeeded" integer NOT NULL,
    "isNaval" boolean NOT NULL,
    CONSTRAINT "PK_unitTypes" PRIMARY KEY (id)
);

CREATE TABLE default_schema."usedResources" (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    "fk_SocialGroups" integer NOT NULL,
    "fk_Resources" integer NOT NULL,
    amount float NOT NULL,
    CONSTRAINT "PK_usedResources" PRIMARY KEY (id)
);

CREATE TABLE default_schema.actions (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    "fk_Nations" integer NOT NULL,
    name text,
    description text NOT NULL,
    result text,
    "isSettled" boolean NOT NULL,
    CONSTRAINT "PK_actions" PRIMARY KEY (id),
    CONSTRAINT "FK_actions_nations_fk_Nations" FOREIGN KEY ("fk_Nations") REFERENCES default_schema.nations (id) ON DELETE CASCADE
);

CREATE TABLE default_schema.factions (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    name text NOT NULL,
    "fk_Nations" integer NOT NULL,
    power integer NOT NULL,
    agenda text NOT NULL,
    contentment integer NOT NULL,
    color text NOT NULL,
    CONSTRAINT "PK_factions" PRIMARY KEY (id),
    CONSTRAINT "FK_factions_nations_fk_Nations" FOREIGN KEY ("fk_Nations") REFERENCES default_schema.nations (id) ON DELETE CASCADE
);

CREATE TABLE default_schema.locations (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    name character varying(255) NOT NULL,
    size integer NOT NULL,
    fortifications integer NOT NULL,
    fk_nations integer NOT NULL,
    CONSTRAINT "PK_locations" PRIMARY KEY (id),
    CONSTRAINT "FK_locations_nations_fk_nations" FOREIGN KEY (fk_nations) REFERENCES default_schema.nations (id) ON DELETE CASCADE
);

CREATE TABLE default_schema."locationsResources" (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    "fk_Locations" integer NOT NULL,
    "fk_Resources" integer NOT NULL,
    amount float NOT NULL,
    CONSTRAINT "PK_locationsResources" PRIMARY KEY (id),
    CONSTRAINT "FK_locationsResources_locations_fk_Locations" FOREIGN KEY ("fk_Locations") REFERENCES default_schema.locations (id) ON DELETE CASCADE,
    CONSTRAINT "FK_locationsResources_resources_fk_Resources" FOREIGN KEY ("fk_Resources") REFERENCES default_schema.resources (id) ON DELETE CASCADE
);

CREATE TABLE default_schema."relatedEvents" (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    "fk_Events" integer NOT NULL,
    "fk_Nations" integer NOT NULL,
    CONSTRAINT "PK_relatedEvents" PRIMARY KEY (id),
    CONSTRAINT "FK_relatedEvents_events_fk_Events" FOREIGN KEY ("fk_Events") REFERENCES default_schema.events (id) ON DELETE CASCADE,
    CONSTRAINT "FK_relatedEvents_nations_fk_Nations" FOREIGN KEY ("fk_Nations") REFERENCES default_schema.nations (id) ON DELETE CASCADE
);

CREATE TABLE default_schema.tradeagreements (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    fk_nationoffering integer NOT NULL,
    fk_nationreceiving integer NOT NULL,
    isaccepted boolean NOT NULL,
    duration integer NOT NULL,
    CONSTRAINT "PK_tradeagreements" PRIMARY KEY (id),
    CONSTRAINT "FK_tradeagreements_nations_fk_nationoffering" FOREIGN KEY (fk_nationoffering) REFERENCES default_schema.nations (id) ON DELETE CASCADE,
    CONSTRAINT "FK_tradeagreements_nations_fk_nationreceiving" FOREIGN KEY (fk_nationreceiving) REFERENCES default_schema.nations (id) ON DELETE CASCADE
);

CREATE TABLE default_schema.accessestonations (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    fk_nations integer NOT NULL,
    fk_users integer NOT NULL,
    dateacquired timestamp with time zone NOT NULL,
    isactive boolean NOT NULL,
    CONSTRAINT "PK_accessestonations" PRIMARY KEY (id),
    CONSTRAINT "FK_accessestonations_nations_fk_nations" FOREIGN KEY (fk_nations) REFERENCES default_schema.nations (id) ON DELETE CASCADE,
    CONSTRAINT "FK_accessestonations_players_fk_users" FOREIGN KEY (fk_users) REFERENCES default_schema.players (id) ON DELETE CASCADE
);

CREATE TABLE default_schema."mapAccess" (
    "fk_Users" integer NOT NULL,
    "fk_Maps" integer NOT NULL,
    CONSTRAINT "PK_mapAccess" PRIMARY KEY ("fk_Users", "fk_Maps"),
    CONSTRAINT "FK_mapAccess_map_fk_Maps" FOREIGN KEY ("fk_Maps") REFERENCES default_schema.map (id) ON DELETE CASCADE,
    CONSTRAINT "FK_mapAccess_players_fk_Users" FOREIGN KEY ("fk_Users") REFERENCES default_schema.players (id) ON DELETE CASCADE
);

CREATE TABLE default_schema.modifiers (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    "fk_Events" integer NOT NULL,
    "modifireType" integer NOT NULL,
    "fk_Resources" integer,
    "fk_SocialGroups" integer,
    "fk_Cultures" integer,
    "fk_Religion" integer,
    CONSTRAINT "PK_modifiers" PRIMARY KEY (id),
    CONSTRAINT "FK_modifiers_cultures_fk_Cultures" FOREIGN KEY ("fk_Cultures") REFERENCES default_schema.cultures (id),
    CONSTRAINT "FK_modifiers_events_fk_Events" FOREIGN KEY ("fk_Events") REFERENCES default_schema.events (id) ON DELETE CASCADE,
    CONSTRAINT "FK_modifiers_religions_fk_Religion" FOREIGN KEY ("fk_Religion") REFERENCES default_schema.religions (id),
    CONSTRAINT "FK_modifiers_resources_fk_Resources" FOREIGN KEY ("fk_Resources") REFERENCES default_schema.resources (id),
    CONSTRAINT "FK_modifiers_socialgroups_fk_SocialGroups" FOREIGN KEY ("fk_SocialGroups") REFERENCES default_schema.socialgroups (id)
);
CREATE TABLE default_schema."accessToUnits" (  
   id integer GENERATED BY DEFAULT AS IDENTITY,  
   "fk_Nation" integer NOT NULL,  
   "fk_UnitTypes" integer NOT NULL,  
   CONSTRAINT "PK_accessToUnits" PRIMARY KEY (id),  
   CONSTRAINT "FK_accessToUnits_nations_fk_Nations" FOREIGN KEY ("fk_Nations") REFERENCES default_schema.nations (id) ON DELETE CASCADE,  
   CONSTRAINT "FK_accessToUnits_unitTypes_fk_UnitTypes" FOREIGN KEY ("fk_UnitTypes") REFERENCES default_schema."unitTypes" (id) ON DELETE CASCADE  
);

CREATE TABLE default_schema."maintenanceCosts" (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    "fk_UnitTypes" integer NOT NULL,
    "fk_Resources" integer NOT NULL,
    amount float NOT NULL,
    CONSTRAINT "PK_maintenanceCosts" PRIMARY KEY (id),
    CONSTRAINT "FK_maintenanceCosts_resources_fk_Resources" FOREIGN KEY ("fk_Resources") REFERENCES default_schema.resources (id) ON DELETE CASCADE,
    CONSTRAINT "FK_maintenanceCosts_unitTypes_fk_UnitTypes" FOREIGN KEY ("fk_UnitTypes") REFERENCES default_schema."unitTypes" (id) ON DELETE CASCADE
);

CREATE TABLE default_schema."productionCost" (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    "fk_UnitTypes" integer NOT NULL,
    "fk_Resources" integer NOT NULL,
    amount float NOT NULL,
    CONSTRAINT "PK_productionCost" PRIMARY KEY (id),
    CONSTRAINT "FK_productionCost_resources_fk_Resources" FOREIGN KEY ("fk_Resources") REFERENCES default_schema.resources (id) ON DELETE CASCADE,
    CONSTRAINT "FK_productionCost_unitTypes_fk_UnitTypes" FOREIGN KEY ("fk_UnitTypes") REFERENCES default_schema."unitTypes" (id) ON DELETE CASCADE
);

CREATE TABLE default_schema."unitOrders" (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    "fk_UnitTypes" integer NOT NULL,
    "fk_Nations" integer NOT NULL,
    quantity integer NOT NULL,
    CONSTRAINT "PK_unitOrders" PRIMARY KEY (id),
    CONSTRAINT "FK_unitOrders_nations_fk_Nations" FOREIGN KEY ("fk_Nations") REFERENCES default_schema.nations (id) ON DELETE CASCADE,
    CONSTRAINT "FK_unitOrders_unitTypes_fk_UnitTypes" FOREIGN KEY ("fk_UnitTypes") REFERENCES default_schema."unitTypes" (id) ON DELETE CASCADE
);

CREATE TABLE default_schema.armies (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    name text NOT NULL,
    "fk_Nations" integer NOT NULL,
    "fk_Locations" integer NOT NULL,
    is_naval bool NOT NULL,
    CONSTRAINT "PK_armies" PRIMARY KEY (id),
    CONSTRAINT "FK_armies_locations_fk_Locations" FOREIGN KEY ("fk_Locations") REFERENCES default_schema.locations (id) ON DELETE CASCADE,
    CONSTRAINT "FK_armies_nations_fk_Nations" FOREIGN KEY ("fk_Nations") REFERENCES default_schema.nations (id) ON DELETE CASCADE
);

CREATE TABLE default_schema.populations (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    fk_religions integer NOT NULL,
    fk_cultures integer NOT NULL,
    fk_socialgroups integer NOT NULL,
    fk_locations integer NOT NULL,
    happiness real NOT NULL,
    CONSTRAINT "PK_populations" PRIMARY KEY (id),
    CONSTRAINT "FK_populations_cultures_fk_cultures" FOREIGN KEY (fk_cultures) REFERENCES default_schema.cultures (id) ON DELETE CASCADE,
    CONSTRAINT "FK_populations_locations_fk_locations" FOREIGN KEY (fk_locations) REFERENCES default_schema.locations (id) ON DELETE CASCADE,
    CONSTRAINT "FK_populations_religions_fk_religions" FOREIGN KEY (fk_religions) REFERENCES default_schema.religions (id) ON DELETE CASCADE,
    CONSTRAINT "FK_populations_socialgroups_fk_socialgroups" FOREIGN KEY (fk_socialgroups) REFERENCES default_schema.socialgroups (id) ON DELETE CASCADE
);

CREATE TABLE default_schema.offeredresources (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    fk_resource integer NOT NULL,
    fk_tradeagreement integer NOT NULL,
    quantity integer NOT NULL,
    CONSTRAINT "PK_offeredresources" PRIMARY KEY (id),
    CONSTRAINT "FK_offeredresources_resources_fk_resource" FOREIGN KEY (fk_resource) REFERENCES default_schema.resources (id) ON DELETE CASCADE,
    CONSTRAINT "FK_offeredresources_tradeagreements_fk_tradeagreement" FOREIGN KEY (fk_tradeagreement) REFERENCES default_schema.tradeagreements (id) ON DELETE CASCADE
);

CREATE TABLE default_schema.wantedresources (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    fk_resource integer NOT NULL,
    fk_tradeagreement integer NOT NULL,
    amount float NOT NULL,
    CONSTRAINT "PK_wantedresources" PRIMARY KEY (id),
    CONSTRAINT "FK_wantedresources_resources_fk_resource" FOREIGN KEY (fk_resource) REFERENCES default_schema.resources (id) ON DELETE CASCADE,
    CONSTRAINT "FK_wantedresources_tradeagreements_fk_tradeagreement" FOREIGN KEY (fk_tradeagreement) REFERENCES default_schema.tradeagreements (id) ON DELETE CASCADE
);

CREATE TABLE default_schema.troops (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    "fk_UnitTypes" integer NOT NULL,
    "fk_Armies" integer NOT NULL,
    quantity integer NOT NULL,
    CONSTRAINT "PK_troops" PRIMARY KEY (id),
    CONSTRAINT "FK_troops_armies_fk_Armies" FOREIGN KEY ("fk_Armies") REFERENCES default_schema.armies (id) ON DELETE CASCADE,
    CONSTRAINT "FK_troops_unitTypes_fk_UnitTypes" FOREIGN KEY ("fk_UnitTypes") REFERENCES default_schema."unitTypes" (id) ON DELETE CASCADE
);

CREATE INDEX "IX_accessestonations_fk_nations" ON default_schema.accessestonations (fk_nations);

CREATE INDEX "IX_accessestonations_fk_users" ON default_schema.accessestonations (fk_users);

CREATE INDEX "IX_accessToUnits_fk_UnitTypes" ON default_schema."accessToUnits" ("fk_UnitTypes");

CREATE INDEX "IX_accessToUnits_fk_Nations" ON default_schema."accessToUnits" ("fk_Nation");

CREATE INDEX "IX_actions_fk_Nations" ON default_schema.actions ("fk_Nations");

CREATE INDEX "IX_armies_fk_Locations" ON default_schema.armies ("fk_Locations");

CREATE INDEX "IX_armies_fk_Nations" ON default_schema.armies ("fk_Nations");

CREATE INDEX "IX_factions_fk_Nations" ON default_schema.factions ("fk_Nations");

CREATE INDEX "IX_locations_fk_nations" ON default_schema.locations (fk_nations);

CREATE INDEX "IX_maintenanceCosts_fk_Resources" ON default_schema."maintenanceCosts" ("fk_Resources");

CREATE INDEX "IX_maintenanceCosts_fk_UnitTypes" ON default_schema."maintenanceCosts" ("fk_UnitTypes");

CREATE INDEX "IX_mapAccess_fk_Maps" ON default_schema."mapAccess" ("fk_Maps");

CREATE INDEX "IX_modifiers_fk_Cultures" ON default_schema.modifiers ("fk_Cultures");

CREATE INDEX "IX_modifiers_fk_Events" ON default_schema.modifiers ("fk_Events");

CREATE INDEX "IX_modifiers_fk_Religion" ON default_schema.modifiers ("fk_Religion");

CREATE INDEX "IX_modifiers_fk_Resources" ON default_schema.modifiers ("fk_Resources");

CREATE INDEX "IX_modifiers_fk_SocialGroups" ON default_schema.modifiers ("fk_SocialGroups");

CREATE INDEX "IX_offeredresources_fk_resource" ON default_schema.offeredresources (fk_resource);

CREATE INDEX "IX_offeredresources_fk_tradeagreement" ON default_schema.offeredresources (fk_tradeagreement);

CREATE INDEX "IX_populations_fk_cultures" ON default_schema.populations (fk_cultures);

CREATE INDEX "IX_populations_fk_locations" ON default_schema.populations (fk_locations);

CREATE INDEX "IX_populations_fk_religions" ON default_schema.populations (fk_religions);

CREATE INDEX "IX_populations_fk_socialgroups" ON default_schema.populations (fk_socialgroups);

CREATE INDEX "IX_productionCost_fk_Resources" ON default_schema."productionCost" ("fk_Resources");

CREATE INDEX "IX_productionCost_fk_UnitTypes" ON default_schema."productionCost" ("fk_UnitTypes");

CREATE INDEX "IX_relatedEvents_fk_Events" ON default_schema."relatedEvents" ("fk_Events");

CREATE INDEX "IX_relatedEvents_fk_Nations" ON default_schema."relatedEvents" ("fk_Nations");

CREATE INDEX "IX_tradeagreements_fk_nationoffering" ON default_schema.tradeagreements (fk_nationoffering);

CREATE INDEX "IX_tradeagreements_fk_nationreceiving" ON default_schema.tradeagreements (fk_nationreceiving);

CREATE INDEX "IX_troops_fk_Armies" ON default_schema.troops ("fk_Armies");

CREATE INDEX "IX_troops_fk_UnitTypes" ON default_schema.troops ("fk_UnitTypes");

CREATE INDEX "IX_unitOrders_fk_Nations" ON default_schema."unitOrders" ("fk_Nations");

CREATE INDEX "IX_unitOrders_fk_UnitTypes" ON default_schema."unitOrders" ("fk_UnitTypes");

CREATE INDEX "IX_wantedresources_fk_resource" ON default_schema.wantedresources (fk_resource);

CREATE INDEX "IX_wantedresources_fk_tradeagreement" ON default_schema.wantedresources (fk_tradeagreement);

COMMIT;