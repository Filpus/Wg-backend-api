// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Wg_backend_api.Data;

#nullable disable

namespace Wg_backend_api.Migrations.GameDb
{
    [DbContext(typeof(GameDbContext))]
    partial class GameDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("default_schema")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Wg_backend_api.Models.AccessToUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("UnitTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_UnitTypes");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_Users");

                    b.HasKey("Id");

                    b.HasIndex("UnitTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("accessToUnits", "default_schema");
                });

            modelBuilder.Entity("Wg_backend_api.Models.Action", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool>("IsSettled")
                        .HasColumnType("boolean")
                        .HasColumnName("isSettled");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("NationId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_Nations");

                    b.Property<string>("Result")
                        .HasColumnType("text")
                        .HasColumnName("result");

                    b.HasKey("Id");

                    b.HasIndex("NationId");

                    b.ToTable("actions", "default_schema");
                });

            modelBuilder.Entity("Wg_backend_api.Models.Army", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("LocationId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_Locations");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("NationId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_Nations");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("NationId");

                    b.ToTable("armies", "default_schema");
                });

            modelBuilder.Entity("Wg_backend_api.Models.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateAcquired")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dateacquired");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("isactive");

                    b.Property<int>("NationId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_nations");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_users");

                    b.HasKey("Id");

                    b.HasIndex("NationId");

                    b.HasIndex("UserId");

                    b.ToTable("accessestonations", "default_schema");
                });

            modelBuilder.Entity("Wg_backend_api.Models.Culture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("cultures", "default_schema");
                });

            modelBuilder.Entity("Wg_backend_api.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Picture")
                        .HasColumnType("text")
                        .HasColumnName("picture");

                    b.HasKey("Id");

                    b.ToTable("events", "default_schema");
                });

            modelBuilder.Entity("Wg_backend_api.Models.Faction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Agenda")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("agenda");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("color");

                    b.Property<int>("Contentment")
                        .HasColumnType("integer")
                        .HasColumnName("contentment");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("NationId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_Nations");

                    b.Property<int>("Power")
                        .HasColumnType("integer")
                        .HasColumnName("power");

                    b.HasKey("Id");

                    b.HasIndex("NationId");

                    b.ToTable("factions", "default_schema");
                });

            modelBuilder.Entity("Wg_backend_api.Models.Localisation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Fortification")
                        .HasColumnType("integer")
                        .HasColumnName("fortifications");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<int>("NationId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_nations");

                    b.Property<int>("Size")
                        .HasColumnType("integer")
                        .HasColumnName("size");

                    b.HasKey("Id");

                    b.HasIndex("NationId");

                    b.ToTable("locations", "default_schema");
                });

            modelBuilder.Entity("Wg_backend_api.Models.MaintenaceCosts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer")
                        .HasColumnName("amount");

                    b.Property<int>("ResourceId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_Resources");

                    b.Property<int>("UnitTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_UnitTypes");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("maintenanceCosts", "default_schema");
                });

            modelBuilder.Entity("Wg_backend_api.Models.Map", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("MapLocation")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("mapLocation");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("map", "default_schema");
                });

            modelBuilder.Entity("Wg_backend_api.Models.MapAccess", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_Users");

                    b.Property<int>("MapId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_Maps");

                    b.HasKey("UserId", "MapId");

                    b.HasIndex("MapId");

                    b.ToTable("mapAccess", "default_schema");
                });

            modelBuilder.Entity("Wg_backend_api.Models.Modifiers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CultureId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_Cultures");

                    b.Property<int>("EventId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_Events");

                    b.Property<int?>("ReligionId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_Religion");

                    b.Property<int?>("ResourceId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_Resources");

                    b.Property<int?>("SocialGroupId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_SocialGroups");

                    b.Property<int>("modifireType")
                        .HasColumnType("integer")
                        .HasColumnName("modifireType");

                    b.HasKey("Id");

                    b.HasIndex("CultureId");

                    b.HasIndex("EventId");

                    b.HasIndex("ReligionId");

                    b.HasIndex("ResourceId");

                    b.HasIndex("SocialGroupId");

                    b.ToTable("modifiers", "default_schema");
                });

            modelBuilder.Entity("Wg_backend_api.Models.Nation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CultureId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_cultures");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("ReligionId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_religions");

                    b.HasKey("Id");

                    b.ToTable("nations", "default_schema");
                });

            modelBuilder.Entity("Wg_backend_api.Models.OfferedResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<int>("ResourceId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_resource");

                    b.Property<int>("TradeAgreementId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_tradeagreement");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId");

                    b.HasIndex("TradeAgreementId");

                    b.ToTable("offeredresources", "default_schema");
                });

            modelBuilder.Entity("Wg_backend_api.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_User");

                    b.HasKey("Id");

                    b.ToTable("players", "default_schema");
                });

            modelBuilder.Entity("Wg_backend_api.Models.Population", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CultureId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_cultures");

                    b.Property<float>("Happiness")
                        .HasColumnType("real")
                        .HasColumnName("happiness");

                    b.Property<int>("LocationId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_locations");

                    b.Property<int>("ReligionId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_religions");

                    b.Property<int>("SocialGroupId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_socialgroups");

                    b.HasKey("Id");

                    b.HasIndex("CultureId");

                    b.HasIndex("LocationId");

                    b.HasIndex("ReligionId");

                    b.HasIndex("SocialGroupId");

                    b.ToTable("populations", "default_schema");
                });

            modelBuilder.Entity("Wg_backend_api.Models.ProductionCost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer")
                        .HasColumnName("amount");

                    b.Property<int>("ResourceId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_Resources");

                    b.Property<int>("UnitTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_UnitTypes");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("productionCost", "default_schema");
                });

            modelBuilder.Entity("Wg_backend_api.Models.ProductionShare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Coefficient")
                        .HasColumnType("integer")
                        .HasColumnName("coefficient");

                    b.Property<int>("ResourceId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_Resources");

                    b.Property<int>("SocialGroupId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_SocialGroups");

                    b.HasKey("Id");

                    b.ToTable("productionShares", "default_schema");
                });

            modelBuilder.Entity("Wg_backend_api.Models.RelatedEvents", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EventId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_Events");

                    b.Property<int>("NationId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_Nations");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("NationId");

                    b.ToTable("relatedEvents", "default_schema");
                });

            modelBuilder.Entity("Wg_backend_api.Models.Religion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("religions", "default_schema");
                });

            modelBuilder.Entity("Wg_backend_api.Models.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsMain")
                        .HasColumnType("boolean")
                        .HasColumnName("ismain");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("resources", "default_schema");
                });

            modelBuilder.Entity("Wg_backend_api.Models.SocialGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float>("BaseHappiness")
                        .HasColumnType("real")
                        .HasColumnName("basehappiness");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<int>("Volunteers")
                        .HasColumnType("integer")
                        .HasColumnName("volunteers");

                    b.HasKey("Id");

                    b.ToTable("socialgroups", "default_schema");
                });

            modelBuilder.Entity("Wg_backend_api.Models.TradeAgreement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Duration")
                        .HasColumnType("integer")
                        .HasColumnName("duration");

                    b.Property<int>("OferingNationId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_nationoffering");

                    b.Property<int>("ReceivingNationId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_nationreceiving");

                    b.Property<bool>("isAccepted")
                        .HasColumnType("boolean")
                        .HasColumnName("isaccepted");

                    b.HasKey("Id");

                    b.HasIndex("OferingNationId");

                    b.HasIndex("ReceivingNationId");

                    b.ToTable("tradeagreements", "default_schema");
                });

            modelBuilder.Entity("Wg_backend_api.Models.Troop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Army")
                        .HasColumnType("integer")
                        .HasColumnName("fk_Armies");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<int>("UnitTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_UnitTypes");

                    b.HasKey("Id");

                    b.HasIndex("Army");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("troops", "default_schema");
                });

            modelBuilder.Entity("Wg_backend_api.Models.UnitOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("NationId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_Nations");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<int>("UnitTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_UnitTypes");

                    b.HasKey("Id");

                    b.HasIndex("NationId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("unitOrders", "default_schema");
                });

            modelBuilder.Entity("Wg_backend_api.Models.UnitType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Defense")
                        .HasColumnType("integer")
                        .HasColumnName("defense");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool>("IsNaval")
                        .HasColumnType("boolean")
                        .HasColumnName("isNaval");

                    b.Property<int>("Melee")
                        .HasColumnType("integer")
                        .HasColumnName("melee");

                    b.Property<int>("Morale")
                        .HasColumnType("integer")
                        .HasColumnName("morale");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Range")
                        .HasColumnType("integer")
                        .HasColumnName("range");

                    b.Property<int>("Speed")
                        .HasColumnType("integer")
                        .HasColumnName("speed");

                    b.Property<int>("VolunteersNeeded")
                        .HasColumnType("integer")
                        .HasColumnName("volunteersNeeded");

                    b.HasKey("Id");

                    b.ToTable("unitTypes", "default_schema");
                });

            modelBuilder.Entity("Wg_backend_api.Models.UsedResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer")
                        .HasColumnName("amount");

                    b.Property<int>("ResourceId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_Resources");

                    b.Property<int>("SocialGroupId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_SocialGroups");

                    b.HasKey("Id");

                    b.ToTable("usedResources", "default_schema");
                });

            modelBuilder.Entity("Wg_backend_api.Models.WantedResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer")
                        .HasColumnName("amount");

                    b.Property<int>("ResourceId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_resource");

                    b.Property<int>("TradeAgreementId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_tradeagreement");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId");

                    b.HasIndex("TradeAgreementId");

                    b.ToTable("wantedresources", "default_schema");
                });

            modelBuilder.Entity("Wg_backend_api.Models.AccessToUnit", b =>
                {
                    b.HasOne("Wg_backend_api.Models.UnitType", null)
                        .WithMany()
                        .HasForeignKey("UnitTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wg_backend_api.Models.Player", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Wg_backend_api.Models.Action", b =>
                {
                    b.HasOne("Wg_backend_api.Models.Nation", null)
                        .WithMany()
                        .HasForeignKey("NationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Wg_backend_api.Models.Army", b =>
                {
                    b.HasOne("Wg_backend_api.Models.Localisation", null)
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wg_backend_api.Models.Nation", null)
                        .WithMany()
                        .HasForeignKey("NationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Wg_backend_api.Models.Assignment", b =>
                {
                    b.HasOne("Wg_backend_api.Models.Nation", null)
                        .WithMany()
                        .HasForeignKey("NationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wg_backend_api.Models.Player", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Wg_backend_api.Models.Faction", b =>
                {
                    b.HasOne("Wg_backend_api.Models.Nation", null)
                        .WithMany()
                        .HasForeignKey("NationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Wg_backend_api.Models.Localisation", b =>
                {
                    b.HasOne("Wg_backend_api.Models.Nation", null)
                        .WithMany()
                        .HasForeignKey("NationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Wg_backend_api.Models.MaintenaceCosts", b =>
                {
                    b.HasOne("Wg_backend_api.Models.Resource", null)
                        .WithMany()
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wg_backend_api.Models.UnitType", null)
                        .WithMany()
                        .HasForeignKey("UnitTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Wg_backend_api.Models.MapAccess", b =>
                {
                    b.HasOne("Wg_backend_api.Models.Map", null)
                        .WithMany()
                        .HasForeignKey("MapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wg_backend_api.Models.Player", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Wg_backend_api.Models.Modifiers", b =>
                {
                    b.HasOne("Wg_backend_api.Models.Culture", null)
                        .WithMany()
                        .HasForeignKey("CultureId");

                    b.HasOne("Wg_backend_api.Models.Event", null)
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wg_backend_api.Models.Religion", null)
                        .WithMany()
                        .HasForeignKey("ReligionId");

                    b.HasOne("Wg_backend_api.Models.Resource", null)
                        .WithMany()
                        .HasForeignKey("ResourceId");

                    b.HasOne("Wg_backend_api.Models.SocialGroup", null)
                        .WithMany()
                        .HasForeignKey("SocialGroupId");
                });

            modelBuilder.Entity("Wg_backend_api.Models.OfferedResource", b =>
                {
                    b.HasOne("Wg_backend_api.Models.Resource", null)
                        .WithMany()
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wg_backend_api.Models.TradeAgreement", null)
                        .WithMany()
                        .HasForeignKey("TradeAgreementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Wg_backend_api.Models.Population", b =>
                {
                    b.HasOne("Wg_backend_api.Models.Culture", null)
                        .WithMany()
                        .HasForeignKey("CultureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wg_backend_api.Models.Localisation", null)
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wg_backend_api.Models.Religion", null)
                        .WithMany()
                        .HasForeignKey("ReligionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wg_backend_api.Models.SocialGroup", null)
                        .WithMany()
                        .HasForeignKey("SocialGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Wg_backend_api.Models.ProductionCost", b =>
                {
                    b.HasOne("Wg_backend_api.Models.Resource", null)
                        .WithMany()
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wg_backend_api.Models.UnitType", null)
                        .WithMany()
                        .HasForeignKey("UnitTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Wg_backend_api.Models.RelatedEvents", b =>
                {
                    b.HasOne("Wg_backend_api.Models.Event", null)
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wg_backend_api.Models.Nation", null)
                        .WithMany()
                        .HasForeignKey("NationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Wg_backend_api.Models.TradeAgreement", b =>
                {
                    b.HasOne("Wg_backend_api.Models.Nation", null)
                        .WithMany()
                        .HasForeignKey("OferingNationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wg_backend_api.Models.Nation", null)
                        .WithMany()
                        .HasForeignKey("ReceivingNationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Wg_backend_api.Models.Troop", b =>
                {
                    b.HasOne("Wg_backend_api.Models.Army", null)
                        .WithMany()
                        .HasForeignKey("Army")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wg_backend_api.Models.UnitType", null)
                        .WithMany()
                        .HasForeignKey("UnitTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Wg_backend_api.Models.UnitOrder", b =>
                {
                    b.HasOne("Wg_backend_api.Models.Nation", null)
                        .WithMany()
                        .HasForeignKey("NationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wg_backend_api.Models.UnitType", null)
                        .WithMany()
                        .HasForeignKey("UnitTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Wg_backend_api.Models.WantedResource", b =>
                {
                    b.HasOne("Wg_backend_api.Models.Resource", null)
                        .WithMany()
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wg_backend_api.Models.TradeAgreement", null)
                        .WithMany()
                        .HasForeignKey("TradeAgreementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
